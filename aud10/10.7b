#include <iostream>
#include <cstring>
#include <cctype>
using namespace std;

void transform(char *a) {
    char modify[100], j = 0, i;
    for(i = 0; a[i] != '\0'; i++) {
        if(!isspace(a[i]) && !ispunct(a[i])) {
            modify[j++] = tolower(a[i]);
        }
    }
    modify[j] = '\0';
    
    for(i = 0; modify[i] != '\0'; i++) {
        a[i] = modify[i];
    }
    
    a[i] = '\0';
}

bool isPalindrome(char *a) {
    for(int i = 0; a[i] != '\0'; i++) {
        if(a[i] != a[strlen(a) - i - 1]) {
            return false;
        }
    }
    return true;
}

bool isPalindromeRecursive(char *a, int index) {
    if(index == strlen(a) / 2) {
        return true;
    }
    
    if(a[index] == a[strlen(a) - index - 1]) {
        return isPalindromeRecursive(a, index + 1);
    }
    
    else {
        return false;
    }
}

int main()
{
    char text[100];
    cin.getline(text, 100);
    
    transform(text);
    bool result = isPalindromeRecursive(text, 0);
    
    if(result) {
        cout << text << " is a Palindrome!" << endl;
    }
    else {
        cout << "Not a Palindrome! Try something else!" << endl;
    }
    
    return 0;
}
